name: electron-windows-nsis-build

on:
  push:
    branches:
      - "**"

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Set up pnpm
        uses: pnpm/action-setup@v4

      - name: Install Dependencies
        shell: powershell
        run: |
          Start-Process powershell -Verb RunAs -ArgumentList "-Command pnpm install --prefer-offline --no-frozen-lockfile" -Wait -NoNewWindow

      - name: Build Electron App
        shell: powershell
        run: |
          Start-Process powershell -Verb RunAs -ArgumentList "-Command pnpm run build" -Wait -NoNewWindow

      - name: Before check nsis dir
        shell: powershell
        run: |
          dir C:\Users\runneradmin
          dir C:\Users\runneradmin\AppData
          dir C:\Users\runneradmin\AppData\Local
          dir C:\Users\runneradmin\AppData\Local\electron-builder
          dir C:\Users\runneradmin\AppData\Local\electron-builder\Cache
          dir C:\Users\runneradmin\AppData\Local\electron-builder\Cache\nsis
          dir C:\Users\runneradmin\AppData\Local\electron-builder\Cache\nsis\nsis-3.0.4.1
          dir C:\Users\runneradmin\AppData\Local\electron-builder\Cache\nsis\nsis-3.0.4.1\Bin
          if (Test-Path C:\Users\runneradmin\AppData\Local\electron-builder\Cache\nsis\nsis-3.0.4.1\Bin\makensis.exe) {
              Write-Host 'makensis.exe exists'
          } else {
              Write-Host 'makensis.exe does not exist'
          }
          if (Test-Path C:\Users\runneradmin\AppData\Local\electron-builder\Cache\nsis\nsis-3.0.4.1\Bin\makensis.exe) {
              Get-ItemProperty C:\Users\runneradmin\AppData\Local\electron-builder\Cache\nsis\nsis-3.0.4.1\Bin\makensis.exe
          }
        continue-on-error: true

      - name: build
        shell: powershell
        run: |
          try {
            $process = Start-Process powershell -Verb RunAs -ArgumentList "-Command pnpx electron-builder --win --publish always" -Wait -NoNewWindow -PassThru
            $process | Out-String
            if ($process.ExitCode -ne 0) {
              throw "Build process failed with exit code $($process.ExitCode)"
            }
          } catch {
            Write-Error "An error occurred: $_"
            throw
          }
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: After check nsis dir
        shell: powershell
        run: |
          dir C:\Users\runneradmin
          dir C:\Users\runneradmin\AppData
          dir C:\Users\runneradmin\AppData\Local
          dir C:\Users\runneradmin\AppData\Local\electron-builder
          dir C:\Users\runneradmin\AppData\Local\electron-builder\Cache
          dir C:\Users\runneradmin\AppData\Local\electron-builder\Cache\nsis
          dir C:\Users\runneradmin\AppData\Local\electron-builder\Cache\nsis\nsis-3.0.4.1
          dir C:\Users\runneradmin\AppData\Local\electron-builder\Cache\nsis\nsis-3.0.4.1\Bin
          if (Test-Path C:\Users\runneradmin\AppData\Local\electron-builder\Cache\nsis\nsis-3.0.4.1\Bin\makensis.exe) {
              Write-Host 'makensis.exe exists'
          } else {
              Write-Host 'makensis.exe does not exist'
          }
          if (Test-Path C:\Users\runneradmin\AppData\Local\electron-builder\Cache\nsis\nsis-3.0.4.1\Bin\makensis.exe) {
              Get-ItemProperty C:\Users\runneradmin\AppData\Local\electron-builder\Cache\nsis\nsis-3.0.4.1\Bin\makensis.exe
          }
        continue-on-error: true

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ./release/**/*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
